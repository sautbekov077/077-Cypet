import os
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.webhook.aiohttp_server import setup_application
from aiohttp import web
from image_generator import generate_image
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(F.text == "/start")
async def start_handler(message: Message):
    await message.answer(
        """üëã 077-Cypet-–∫–µ “õ–æ—à –∫–µ–ª–¥—ñ“£!
–°—É—Ä–µ—Ç—Ç–µ—Ä–¥—ñ –∂–∞—Å–∞–π—Ç—ã–Ω —Å–µ–Ω—ñ“£ –∂–µ–∫–µ –∫”©–º–µ–∫—à—ñ“£ üé®

üì∏ “ö–∏—è–ª—ã“£–¥—ã —Å–∏–ø–∞—Ç—Ç–∞ ‚Äî –º–µ–Ω —Å–æ“ì–∞–Ω —Å–∞–π —Å—É—Ä–µ—Ç –∂–∞—Å–∞–π–º—ã–Ω.
–ú—ã—Å–∞–ª—ã:
¬´–ö“Ø–Ω –±–∞—Ç“õ–∞–Ω–¥–∞“ì—ã —Ñ—É—Ç—É—Ä–∏—Å—Ç—ñ–∫ “õ–∞–ª–∞, –∞–Ω–∏–º–µ —Å—Ç–∏–ª—ñ–Ω–¥–µ¬ª
–Ω–µ–º–µ—Å–µ
¬´“í–∞—Ä—ã—à—Ç–∞“ì—ã –∫—ñ—à–∫–µ–Ω—Ç–∞–π –º—ã—Å—ã“õ, —à–ª–µ–º–º–µ–Ω¬ª

üõ† –ú“Ø–º–∫—ñ–Ω–¥—ñ–∫—Ç–µ—Ä—ñ:
‚Äì –°–∏–ø–∞—Ç—Ç–∞–º–∞ –∞—Ä“õ—ã–ª—ã —Å—É—Ä–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è—Å—ã
‚Äì –ê—Ä—Ç, —Ñ—ç–Ω—Ç–µ–∑–∏, —Ä–µ–∞–ª–∏–∑–º –∂”ô–Ω–µ –±–∞—Å“õ–∞ —Å—Ç–∏–ª—å–¥–µ—Ä
‚Äì “ö–∞–∑–∞“õ—à–∞ –∂”ô–Ω–µ –∞“ì—ã–ª—à—ã–Ω—à–∞ —Å“±—Ä–∞–Ω—ã—Å—Ç–∞—Ä–¥—ã “õ–æ–ª–¥–∞–π–¥—ã

üöÄ –ë–∞—Å—Ç–∞“ì—ã“£ –∫–µ–ª—Å–µ ‚Äî –∞–ª“ì–∞—à“õ—ã —Å“±—Ä–∞–Ω—ã—Å—ã“£–¥—ã –∂–∞–∑–∞ –±–µ—Ä!"""
    )

@dp.message()
async def handle_prompt(message: Message):
    prompt = message.text
    await message.answer("–°—É—Ä–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–ª–∞–Ω—É–¥–∞, –∫“Ø—Ç–µ —Ç“±—Ä—ã“£—ã–∑...")
    image_url = generate_image(prompt)
    if image_url:
        await message.answer_photo(image_url)
    else:
        await message.answer("”®–∫—ñ–Ω—ñ—à–∫–µ –æ—Ä–∞–π —Å—É—Ä–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–ª–∞–Ω–±–∞–¥—ã üò¢")

async def on_startup(bot: Bot):
    await bot.set_webhook(WEBHOOK_URL)

async def on_shutdown(bot: Bot):
    await bot.delete_webhook()

async def main():
    app = web.Application()
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)
    dp.include_router(dp)
    setup_application(app, dp, bot=bot)
    return app

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    web.run_app(main(), host="0.0.0.0", port=int(os.getenv("PORT", 5000)))
